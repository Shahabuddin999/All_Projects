NgRok
-------
Open ngrok for jenkins to keep jenkins live on 8080 port suppose jenkin live URL is : https://0c60b3595e37.ngrok-free.app 

GitHub
---------
then Open Github -> click settings -> Webhook -> Add webhook
 Payload URL *: https://0c60b3595e37.ngrok-free.app/github-webhook/    must add "/github-webhook/" in last of ngrok url when you are going to add in webhook URL
 Content type * : application/json
 SSL verification:  Enable SSL verification 
 Which events would you like to trigger this webhook?: Just the push event.
 Click on "Add webhook" button

Jenkins
----------
1) Login jenkins -> Dashboard-> New Item -> enter an Item (jenkinDemo-pipeline)-> Pipeline -> click OK 
2) jenkinDemo-pipeline -> click configure -> click "Triggers" -> check "GitHub hook trigger for GITScm polling
?"

3) Click on Pipeline -> Definition in dropdown -> select "Pipeline script from SCM"
4) SCM -> select Git 
5) Repositories ?
	Repository URL : https://github.com/Shahabuddin999/All_Projects.git
   Credentials ? : select credential if github repo is private only
6) Branches to build?
	Branch Specifier (blank for 'any')? : */main
7) Script Path ? : jenkinDemo/Jenkinsfile

Click Save and Apply button
Now jenkins will take pull as someone commits the code on git and it will automatically will build the jar and test the unit case run the app on AWS/Docker/Kubernetes as you wrote the script.

Jenkinsfile is available in the jenkinDemo project in root location, this script will be running to build and test the run, but jar file will not be runing after script finishes its execution.
because server will be runing on AWS/Docker/Kubernetes not inside jenkins server will run out of jenkins. you can give the command to run on AWS/Docker/Kubernetes to keep running the application after building the jar
